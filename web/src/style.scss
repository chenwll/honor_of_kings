// reset
*{
  box-sizing: border-box;
  outline:none;
}

html{
  font-size:13px;
}

body{
  margin: 0;
  font-family: Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.2rem;
  background: #f1f1f1f1;
}

a{
  color:#999
}

$colors: (
        'primary': #db9e3f,
        'info': #4b67af,
        'danger': #791a15,
        'blue-1': #1f3695,
        'blue': #4394e4,
        'white': #fff,
        'white-1': #fcfcfc,
        'white-2': #eceef0,
        'light': #f9f9f9,
        'light-1': #d4d9de,
        'grey': #999,
        'grey-1': #666,
        'dark-1': #343440,
        'dark': #222,
        'black': #000,
);
@each $var in (left,center,right) {
  .text-#{var} {
    text-align: $var;
  }
}

@each $colorKey,$color in $colors {
  .text-#{$colorKey}{
    color:$color;
  }
  .bg-#{$colorKey}{
    background-color:$color
  }
}

// font-size
$base-font-size: 1rem;
$font-sizes: (
  xs:0.7692, //10
  sm:0.9231,// 12
  md:1, //13
  lg: 1.0769, //14
  xl:1.2308,
);

@each $sizeKey, $size in $font-sizes {
  .fs-#{$sizeKey}{
    font-size: $size * $base-font-size;
  }
}

.flex-column{
  flex-direction: column;
}
.d-flex {
  display: flex;
}

$flex-jc:(
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around,
);

$flex-ai:(
  start:flex-start,
  end:flex-end,
  center:center,
  between:space-between,
  around:space-around,
);

@each $key,$value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

@each $key,$value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}

.flex-1{
  flex:1;
}

.flex-grow-1 {
  flex-grow:1;
}

$spacing-types:(
  m:margin,
  p:padding,
);

$spacing-directions:(
  t:top,
  r:right,
  b:bottom,
  l:left,
);

$spacing-base-size: 1rem;
$spacing-sizes:(
  0:0,
  1:0.25,
  2:0.5,
  3:1,
  4:1.5,
  5:3,
);

// 带方位的
// m-0, mx-0
@each $typeKey, $type in $spacing-types {
  // .m-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size;
    }
  }
  // .mx-1 , .my-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $spacing-base-size;
      #{$type}-right: $size * $spacing-base-size;
    }
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
  }
  // .mt-1
  @each $directionKey, $direction in $spacing-directions {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size;
      }
    }
  }
}
